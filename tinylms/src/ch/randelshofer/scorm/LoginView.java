/*
 * @(#)StudentsView.java  1.1  2006-05-26
 *
 * Copyright (c) 2003 Werner Randelshofer
 * Hausmatt 10, Immensee, CH-6405, Switzerland.
 * http://www.randelshofer.ch
 * All rights reserved.
 *
 * The copyright of this software is owned by Werner Randelshofer. 
 * You may not use, copy or modify this software, except in  
 * accordance with the license agreement you entered into with  
 * Werner Randelshofer. For details see accompanying license terms. 
 */

package ch.randelshofer.scorm;

import ch.randelshofer.gui.*;
import ch.randelshofer.gui.table.*;
import ch.randelshofer.util.*;
import java.awt.*;
import java.beans.*;
import javax.swing.*;
import javax.swing.table.*;
import javax.swing.text.*;
/**
 * StudentsView.
 *
 * @author Werner Randelshofer
 * @version 1.1 2006-05-26 Internationalized. 
 * <br>1.0 2003-10-31 Reworked. 
 * <br>0.1 August 22, 2003  Created.
 */
public class LoginView extends javax.swing.JPanel implements PropertyChangeListener {
    private CourseModel model;
    private TableCellEditor passwordCellEditor;
    private TableCellRenderer passwordCellRenderer;
private ResourceBundleUtil labels;

    /** Creates a new instance. */
    public LoginView() {
        labels = ResourceBundleUtil.getLAFBundle("ch.randelshofer.scorm.Labels");
            initComponents();
            passwordCellEditor = new PasswordCellEditor();
            passwordCellRenderer = new PasswordCellRenderer();
    }
    public void setModel(CourseModel m) {
        if (model != null) {
            model.removePropertyChangeListener(this);
        }
        model = m;
        if (model != null) {
            model.addPropertyChangeListener(this);
            usersTable.setModel(model.getUsersTableModel());
            updateLoginMode();
            usersTable.getColumnModel().getColumn(4).setCellEditor(passwordCellEditor);
            usersTable.getColumnModel().getColumn(4).setCellRenderer(passwordCellRenderer);
        }
    }
    public CourseModel getModel() {
        return model;
    }
    public void setEnabled(boolean b) {
        super.setEnabled(b);
        loginAutomaticRadioButton.setEnabled(b);
        loginRestrictedRadioButton.setEnabled(b);
        loginUnrestrictedRadioButton.setEnabled(b);
        usersScrollPane.setEnabled(b && loginRestrictedRadioButton.isSelected());
        usersTable.setEnabled(b && loginRestrictedRadioButton.isSelected());
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        loginGroup = new javax.swing.ButtonGroup();
        loginAutomaticRadioButton = new javax.swing.JRadioButton();
        loginUnrestrictedRadioButton = new javax.swing.JRadioButton();
        loginRestrictedRadioButton = new javax.swing.JRadioButton();
        usersScrollPane = new javax.swing.JScrollPane();
        usersTable = new ch.randelshofer.gui.MutableJTable();

        setLayout(new java.awt.GridBagLayout());

        setBorder(javax.swing.BorderFactory.createEmptyBorder(12, 12, 12, 12));
        loginGroup.add(loginAutomaticRadioButton);
        loginAutomaticRadioButton.setSelected(true);
        loginAutomaticRadioButton.setText(labels.getString("login.loginAsGuest"));
        loginAutomaticRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                loginStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(loginAutomaticRadioButton, gridBagConstraints);

        loginGroup.add(loginUnrestrictedRadioButton);
        loginUnrestrictedRadioButton.setText(labels.getString("login.allowEverybody"));
        loginUnrestrictedRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                loginStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        add(loginUnrestrictedRadioButton, gridBagConstraints);

        loginGroup.add(loginRestrictedRadioButton);
        loginRestrictedRadioButton.setText(labels.getString("login.onlyUsersFromList"));
        loginRestrictedRadioButton.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                loginStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        add(loginRestrictedRadioButton, gridBagConstraints);

        usersScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        usersScrollPane.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        usersTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        usersTable.setEnabled(false);
        usersScrollPane.setViewportView(usersTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 24, 0, 0);
        add(usersScrollPane, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents
    
    private void loginStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_loginStateChanged
        // Add your handling code here:
        if (model != null) {
            if (loginAutomaticRadioButton.isSelected()) {
                model.setLoginMode(CourseModel.LOGIN_AUTOMATIC);
            } else if (loginRestrictedRadioButton.isSelected()) {
                model.setLoginMode(CourseModel.LOGIN_RESTRICTED);
            } else if (loginUnrestrictedRadioButton.isSelected()) {
                model.setLoginMode(CourseModel.LOGIN_UNRESTRICTED);
            }
        }
    }//GEN-LAST:event_loginStateChanged
    
    public void propertyChange(PropertyChangeEvent evt) {
        if (evt.getSource() == model
        && evt.getPropertyName().equals("loginMode")) {
            updateLoginMode();
        }
    }
    private void updateLoginMode() {
        switch (model.getLoginMode()) {
            case CourseModel.LOGIN_AUTOMATIC :
                loginAutomaticRadioButton.setSelected(true);
                usersScrollPane.setEnabled(false);
                usersTable.setEnabled(false);
                break;
            case CourseModel.LOGIN_UNRESTRICTED :
                loginUnrestrictedRadioButton.setSelected(true);
                usersScrollPane.setEnabled(false);
                usersTable.setEnabled(false);
                break;
            case CourseModel.LOGIN_RESTRICTED :
                loginRestrictedRadioButton.setSelected(true);
                usersScrollPane.setEnabled(isEnabled());
                usersTable.setEnabled(isEnabled());
                break;
        }
        
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton loginAutomaticRadioButton;
    private javax.swing.ButtonGroup loginGroup;
    private javax.swing.JRadioButton loginRestrictedRadioButton;
    private javax.swing.JRadioButton loginUnrestrictedRadioButton;
    private javax.swing.JScrollPane usersScrollPane;
    private ch.randelshofer.gui.MutableJTable usersTable;
    // End of variables declaration//GEN-END:variables
    
}
